<?xml version="1.0" encoding="utf-8" ?>
<!-- 根节点 -->
<!-- scan true 配置文件发生改变，将会被重新加载 -->
<!-- scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟 -->
<!-- debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- 定义变量，可以在下文使用${}调用 -->
    <property name="APP_Name" value="logback-demo" />

    <!-- 引入properties文件 -->
    <property file="log/log.properties"/>

    <!-- 定义时间戳 -->
    <!-- 设置将当前时间（解析配置文件的时间）转换为字符串的模式，遵循java.txt.SimpleDateFormat的格式 -->
    <!-- 用于监测配置文件是否改变 -->
    <timestamp key="bySecond" datePattern="yyyy-MM-dd-HH-mm-ss"/>

    <!-- 定义上下文名称，可以通过 %contextName 打印上下文名称 -->
    <contextName>${APP_Name}:${bySecond}</contextName>

    <!-- 定义appender,一个appender代表一个日志输出介质，有可能是文件、控制台、数据库-->

    <!-- 将日志输出到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 进行日志格式化 -->
        <encoder>
            <!-- 日志打印格式 -->
            <!-- %d 日志打印时间-->
            <!-- %logger 打印日志的类的权限定名-->
            <!-- %thread 打印日志的方法名 -->
            <pattern>[%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS} %logger.%thread %m</pattern>
        </encoder>
        <!-- 控制台输出方式，共有两种选择方式，默认为System.err -->
        <target>System.err</target>
    </appender>
    <!-- 将日志输出到文件 -->
    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <!--被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值-->
        <file>log/FILE.log</file>
        <append>true</append>
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
        <!-- 如果是 true，日志会被安全的写入文件，即使其他的FileAppender也在向此文件做写入操作，效率低，默认是 false -->
        <prudent>false</prudent>
    </appender>

    <!--用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。-->
    <!--<loger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。-->
    <logger name="monitor_log" level="INFO" additivity="false">
        <appender-ref ref="MONITOR"/>
    </logger>

    <logger name="android_explog" level="INFO" additivity="false">
        <appender-ref ref="ANDROID_EXPLOG"/>
    </logger>

    <logger name="ios_explog" level="INFO" additivity="false">
        <appender-ref ref="IOS_EXPLOG"/>
    </logger>

    <!-- level 设置日志打印级别，大小写无关 -->
    <!-- 共有TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF 几种级别， 默认为DEBUG -->
    <root>
        <level value="INFO" />
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <!--<appender-ref ref="FILEDEBUG" />-->
        <!--<appender-ref ref="FILEINFO" />-->
        <!--<appender-ref ref="FILEWARN" />-->
        <!--<appender-ref ref="FILEERROR" />-->
    </root>
</configuration>